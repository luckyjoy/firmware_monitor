name: Firmware Monitor CI

'on':
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write
  packages: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  # --- Stage 1: Run Tests on Matrix and Generate Reports ---
  test_and_prepare:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Run Analysis Script & Rename Report (${{ matrix.os }})
        id: generate_report
        shell: bash
        run: |
          set -euo pipefail

          # Generate reports (pass the run number as build id)
          python firmware_monitor.py ${{ github.run_number }}

          # Find the latest HTML produced by the script
          LATEST_REPORT_PATH="$(ls -t reports/*.html | head -n 1)"
          if [ -z "${LATEST_REPORT_PATH}" ]; then
            echo "::error::No report file found!"
            exit 1
          fi

          # Normalize the OS suffix and rename the file for uniqueness
          OS_SUFFIX="$(echo "${{ matrix.os }}" | tr '[:upper:]' '[:lower:]')"
          BASE_NAME="$(basename "${LATEST_REPORT_PATH}" .html)"
          NEW_FILENAME="${BASE_NAME}_${OS_SUFFIX}.html"
          mv "${LATEST_REPORT_PATH}" "reports/${NEW_FILENAME}"
          echo "Renamed report: reports/${NEW_FILENAME}"

      - name: Upload Analysis Reports Artifact
        uses: actions/upload-artifact@v4
        with:
          name: analysis-reports-${{ matrix.os }}
          path: reports/

  # --- Stage 2: Merge History, Build Pages, Deploy ---
  build_and_deploy:
    needs: test_and_prepare
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    env:
      SITE_BASE_PATH: /firmware_monitor/
    steps:
      - name: Checkout MAIN into ./main
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: main

      - name: Download Windows Reports Artifact
        uses: actions/download-artifact@v4
        with:
          name: analysis-reports-windows-latest
          path: main/reports/

      - name: Download Ubuntu Reports Artifact
        uses: actions/download-artifact@v4
        with:
          name: analysis-reports-ubuntu-latest
          path: main/reports/

      - name: Build latest index.html (root)
        shell: bash
        working-directory: main
        run: |
          set -euo pipefail
          mkdir -p reports
          # Prefer Ubuntu as latest; fallback to any html
          LATEST_UBUNTU="$(ls -t reports/*_ubuntu-latest.html 2>/dev/null | head -n 1 || true)"
          if [ -n "$LATEST_UBUNTU" ]; then
            cp "$LATEST_UBUNTU" reports/index.html
          else
            ANY_HTML="$(ls -t reports/*.html 2>/dev/null | head -n 1 || true)"
            [ -n "$ANY_HTML" ] && cp "$ANY_HTML" reports/index.html || { echo "::error::No HTML report to serve as index.html"; exit 1; }
          fi

      - name: Prepare worktree for report_history
        shell: bash
        working-directory: main
        run: |
          set -euo pipefail
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # If history branch is missing, initialize it (clean root)
          if ! git ls-remote --exit-code --heads origin report_history >/dev/null 2>&1; then
            git switch --orphan report_history
            rm -rf .
            echo "<!doctype html><title>Report History</title>" > index.html
            git add -A
            git commit -m "init report_history"
            git push origin report_history
            git switch -C main
          fi

          git fetch origin report_history:report_history
          # Add a separate worktree folder just for the history branch
          git worktree add ../history_wt report_history

      - name: Merge existing history + new reports
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p main/reports/report_history

          echo "== Copy FROM history branch to staging =="
          rsync -a --exclude='.git' --exclude='.github' history_wt/ main/reports/report_history/

          echo "== Copy IN new reports from this run =="
          shopt -s nullglob
          cp -f main/reports/*_ubuntu-latest.html  main/reports/report_history/ 2>/dev/null || true
          cp -f main/reports/*_windows-latest.html main/reports/report_history/ 2>/dev/null || true

          echo "== Totals after merge =="
          echo "HTML count: $(ls -1 main/reports/report_history/*.html 2>/dev/null | wc -l)"

      - name: Generate history index (HTML with absolute Back link)
        shell: bash
        run: |
          set -euo pipefail
          BASE="/firmware_monitor/"
          HIST="main/reports/report_history"

          mapfile -t FILES < <(find "$HIST" -maxdepth 1 -type f -name 'firmware_analysis_report_*.html' | sort -r)
          LINKS=""
          for f in "${FILES[@]}"; do
            b="$(basename "$f")"
            label="$(echo "$b" \
              | sed -E 's/^firmware_analysis_report_([0-9]{8})_([0-9]{6})(_[0-9]+)?_(.*)\.html$/Date: \1 Time: \2 Build: \3 OS: \4/' \
              | sed 's/_//g' \
              | sed 's/Build:  /Build: NA /')"
            LINKS+="<li><a href=\"$b\">$label</a></li>"
          done

          cat > "$HIST/index.html" <<HTML
<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <title>Report History</title>
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <style>
    body { font-family: system-ui, -apple-system, Segoe UI, Roboto, sans-serif; margin: 2rem; color: #111827; }
    a { color: #1d4ed8; text-decoration: none; }
    a:hover { text-decoration: underline; }
    .back { margin-bottom: 1rem; display: inline-block; }
    h1 { color: #111827; margin: 0.2rem 0 1rem; }
    ul { padding-left: 1.2rem; }
    li { margin: 0.35rem 0; }
    .note { margin-top: 1.5rem; color: #6b7280; font-size: 0.9rem; }
  </style>
</head>
<body>
  ${BASE}‚Üê Back to Latest Report</a>
  <h1>Archived Report History</h1>
  <ul>
    ${LINKS}
  </ul>
  <div class="note">All reports are archived here: ${BASE}report_history/</div>
</body>
</html>
HTML

          # Ensure Pages treats this as static site
          touch main/reports/.nojekyll

      - name: Commit & push updated history branch
        shell: bash
        run: |
          set -euo pipefail
          # Sync merged history into the branch worktree root
          rsync -a --delete main/reports/report_history/ history_wt/

          cd history_wt
          git add -A
          if ! git diff --cached --quiet; then
            git commit -m "Add reports from run ${GITHUB_RUN_NUMBER}"
            git push origin HEAD:report_history
          else
            echo "No changes to commit to report_history."
          fi

      - name: Upload Pages artifact (full merged history)
        uses: actions/upload-pages-artifact@v4
        with:
          path: 'main/reports/'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4