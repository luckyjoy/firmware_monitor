name: Firmware Monitor CI

'on':
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build_reports:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Generate report (${{ matrix.os }})
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p reports # Ensure reports dir exists
          python firmware_monitor.py ${{ github.run_number }} # Generate unique report

          # Rename latest html with OS suffix
          LATEST="$(ls -t reports/firmware_analysis_report_*.html | head -n 1)"
          OS_SUFFIX="$(echo "${{ matrix.os }}" | tr '[:upper:]' '[:lower:]')"
          mv "$LATEST" "reports/$(basename "$LATEST" .html)_${OS_SUFFIX}.html"

      - name: Upload report artifact
        uses: actions/upload-artifact@v4
        with:
          name: reports-${{ matrix.os }}
          path: reports/

  deploy: # Renamed from publish_site
    needs: build_reports
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 1. Download all artifacts into a single 'reports' folder
      - name: Download all reports
        uses: actions/download-artifact@v4
        with:
          pattern: reports-*
          path: reports # Temp working directory for merging
          merge-multiple: true 
          
      # 2. Clone the report_history branch into ./_hist
      - name: Checkout archive branch (report_history)
        uses: actions/checkout@v4
        with:
          ref: report_history
          path: _hist 

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # 3. Merge history and generate summary reports (report.html & report_history.html)
      - name: Prepare History and Merge Reports
        shell: bash
        env:
          BUILD_NUM: ${{ github.run_number }}
          
        run: |
          set -euo pipefail
          
          # Flatten artifact structure (handles download quirks)
          echo "Flattening downloaded reports..."
          find reports/ -mindepth 2 -name '*.html' -exec mv {} reports/ \;
          find reports/ -mindepth 2 -name '*.txt' -exec mv {} reports/ \;
          find reports/ -mindepth 1 -type d -delete 2>/dev/null || true
          
          # Copy history from _hist into reports/ (CRITICAL for history preservation)
          echo "Merging existing history into current reports directory..."
          rsync -a _hist/ reports/
          
          # Run Python in merge mode (no argument) to generate report.html and report_history.html
          python firmware_monitor.py 
          
          # Setup _site directory structure
          mkdir -p _site/report_history
          
          # Copy merged report to the landing page
          cp reports/report.html _site/index.html
          
          # Copy all unique reports (new and old) to the history folder
          rsync -a --exclude='report.html' --exclude='report_history.html' reports/ _site/report_history/
          
          # Generate the history index page content using the Python-generated report_history.html
          LINKS="$(sed -n '/<ul/,/<\/ul>/p' reports/report_history.html | sed '1d;$d')"
          echo '<!doctype html><meta charset="utf-8"><meta name="viewport" content="width=device-width,initial-scale=1"><title>Report History</title><style>body{font-family:system-ui,-apple-system,Segoe UI,Roboto,sans-serif;margin:2rem;color:#111827}a{color:#1d4ed8;text-decoration:none}a:hover{text-decoration:underline}.back{margin-bottom:1rem;display:inline-block;padding:.5rem .75rem;background:#dbeafe;border-radius:6px;font-weight:600}h1{margin:.2rem 0 1rem}ul{padding-left:1.2rem}li{margin:.35rem 0}.note{margin-top:1.5rem;color:#6b7280;font-size:.9rem}</style><a href=\"../index.html\" class=\"back\">← Back to Latest Report</a><h1>Archived Report History</h1><ul>' > _site/report_history/index.html
          echo "${LINKS}" >> _site/report_history/index.html
          echo '</ul><div class="note">All reports are archived here: <a href="https://luckyjoy.github.io/firmware_monitor/report_history/">https://luckyjoy.github.io/firmware_monitor/report_history/</a></div>' >> _site/report_history/index.html

          # Ensure static hosting
          touch _site/.nojekyll

      # 4. Publish the site artifact
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v4
        with:
          path: _site/

      # 5. Add link to job summary (Fulfills the user request)
      - name: Add link to job summary
        shell: bash
        run: |
          REPORT_URL="https://luckyjoy.github.io/firmware_monitor/"
          echo "### Deployment Status" >> $GITHUB_STEP_SUMMARY
          echo "✅ **[Report Published]($REPORT_URL)**" >> $GITHUB_STEP_SUMMARY

      # 6. Update the archive branch contents (Fixes deletion bug)
      - name: Commit archive (report_history)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          set -euo pipefail
          # FIX: Removed '--delete' to preserve historical reports (e.g., build 97)
          rsync -a --exclude='.git' _site/report_history/ _hist/ 
          
          cd _hist
          git add -A
          if ! git diff --cached --quiet; then
            git -c user.name='github-actions[bot]' -c user.email='github-actions[bot]@users.noreply.github.com' commit -m "Add reports from run ${GITHUB_RUN_NUMBER}"
            git push origin HEAD:report_history
          else
            echo "No archive changes."
          fi

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4