name: Firmware Monitor CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write    
  pages: write       
  id-token: write    
  packages: write    

jobs: # <--- CRITICAL: Must be flush left (zero indentation)
  build_and_test: # <--- Must be indented exactly two spaces
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Run Analysis Script & Prepare Reports
      run: |
        # Ensure report filename is consistent across runs
        REPORT_FILE="reports/firmware_analysis_report_${{ github.run_number }}.html"
        # Assuming your script handles argument parsing (e.g., using argparse)
        python firmware_monitor.py --build-number ${{ github.run_number }}
        
        # Ensure the reports directory exists
        mkdir -p reports/report_history
        
        # Copy the report to the historical path
        cp "$REPORT_FILE" reports/report_history/
        
        # Copy the latest report to the root index.html path
        cp "$REPORT_FILE" reports/index.html
        
        # NOTE: The logic for generating report_history/index.html 
        # is missing from this version and will prevent the history page 
        # from updating. Please refer to the previous multi-OS solution 
        # for the correct history generation steps if this is intended.
        
    - name: Upload Report Artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: 'reports/' 
        
    # ---------------------------------------------
    # Docker Image Build/Push for GHCR
    # ---------------------------------------------

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Local Analysis Image Dockerfile
      run: |
        cat <<EOF > Dockerfile.ci
        FROM python:3.10-slim
        WORKDIR /app
        COPY firmware_monitor.py .
        CMD ["python", "firmware_monitor.py"]
        EOF
        
    - name: Log in to GitHub Container Registry (GHCR)
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        file: Dockerfile.ci
        tags: |
          ghcr.io/${{ github.repository }}:latest
          ghcr.io/${{ github.repository }}:${{ github.sha }}

  deploy: # <--- Must be indented exactly two spaces, parallel to build_and_test
    # This job handles the Pages deployment in isolation
    needs: build_and_test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4