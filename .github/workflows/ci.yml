name: Firmware Monitoring CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# Grant GITHUB_TOKEN write permission for contents and pages
permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Run Analysis Script & Generate Reports
      # Execute the self-contained script. Reports are saved in ./reports/
      run: python firmware_monitor.py

    - name: Find Latest Report HTML Path
      id: get_report_path
      # Get the actual filename since the script uses a dynamic timestamp
      run: |
        REPORT_FILE=$(ls reports/firmware_monitor_*.html | head -n 1)
        echo "report_path=$REPORT_FILE" >> $GITHUB_OUTPUT
        echo "filename=$(basename $REPORT_FILE)" >> $GITHUB_OUTPUT

    - name: Upload Report Artifact for GitHub Pages
      # Uploads the entire reports folder, but we will focus on the latest HTML file
      uses: actions/upload-pages-artifact@v3
      with:
        path: reports/

    - name: Log in to GitHub Container Registry (GHCR)
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ghcr.io/${{ github.repository }}:latest
          ghcr.io/${{ github.repository }}:${{ github.sha }}

  # Deployment job runs only after build_and_test is complete
  deploy:
    needs: build_and_test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' # Only deploy for pushes to main
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

