# Retrieve EXISTING history (branch root -> history_temp/)
      - name: Retrieve Existing Report History (if branch exists)
        id: fetch_history
        uses: actions/checkout@v4
        continue-on-error: true
        with:
          repository: ${{ github.repository }}
          ref: report_history
          path: history_temp
          fetch-depth: 1

      - name: Prepare Reports for Deployment (merge history + build indexes)
        shell: bash
        run: |
          set -euo pipefail

          mkdir -p reports/report_history

          echo "== Debug: contents of history_temp (report_history branch root) =="
          if [ -d history_temp ]; then
            ls -la history_temp || true
          else
            echo "No history_temp directory (first run or branch missing)."
          fi

          # --- Merge existing history from the dedicated branch (ROOT) ---
          # Use rsync to avoid copying .git and to preserve timestamps/permissions.
          if [ -d history_temp ]; then
            # rsync is available on ubuntu-latest runners
            rsync -a --exclude='.git' --exclude='.github' history_temp/ reports/report_history/ || true
          fi

          echo "== Debug: carried-over files =="
          ls -la reports/report_history || true
          echo "Carried-over HTML count: $(ls -1 reports/report_history/*.html 2>/dev/null | wc -l)"

          # --- Add NEW reports from this run ---
          shopt -s nullglob
          for f in reports/*_ubuntu-latest.html;  do cp -f "$f" reports/report_history/; done
          for f in reports/*_windows-latest.html; do cp -f "$f" reports/report_history/; done

          echo "== Debug: after adding this run's files =="
          ls -la reports/report_history || true
          echo "Total HTML in history now: $(ls -1 reports/report_history/*.html 2>/dev/null | wc -l)"

          # --- Choose one (Ubuntu) as the latest landing page ---
          LATEST_UBUNTU_REPORT="$(ls -t reports/*_ubuntu-latest.html | head -n 1)"
          cp "${LATEST_UBUNTU_REPORT}" reports/index.html

          # --- Build History Index page using HTML template ---
          mapfile -t REPORT_FILES < <(find reports/report_history -maxdepth 1 -type f -name 'firmware_analysis_report_*.html' | sort -r)

          HISTORY_LINKS=""
          for file_path in "${REPORT_FILES[@]}"; do
            filename="$(basename "$file_path")"
            # Expected: firmware_analysis_report_YYYYMMDD_HHMMSS[_BUILD]_os.html
            link_name="$(echo "$filename" \
              | sed -E 's/^firmware_analysis_report_([0-9]{8})_([0-9]{6})(_[0-9]+)?_(.*)\.html$/Date: \1 Time: \2 Build: \3 OS: \4/' \
              | sed 's/_//g' \
              | sed 's/Build:  /Build: NA /')"
            HISTORY_LINKS+="<li><a href=\"$filename\">$link_name</a></li>"
          done

          # Ensure Pages doesnâ€™t try to run Jekyll
          touch reports/.nojekyll

          # Fill template placeholder (expects {{HISTORY_LINKS}} in history_template.html)
          sed "s|{{HISTORY_LINKS}}|$HISTORY_LINKS|g" history_template.html > reports/report_history/index.html

      - name: Push Combined History Back to Repository
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          directory: reports/report_history
          branch: report_history
          # IMPORTANT: avoid rewriting the branch if our merge step fails to include old files.
          force: false