name: Firmware Monitor CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write
  packages: write

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        # No caching needed since there are no dependencies
        python-version: '3.10'

    # Dependency installation step removed as per your request

    - name: Run Analysis Script & Prepare Reports
      id: generate_report
      run: |
        # 1. Run the script directly with the build number argument
        python firmware_monitor.py ${{ github.run_number }}
        
        # 2. Find the most recently created HTML report
        LATEST_REPORT=$(ls -t reports/*.html | head -n 1)
        if [ -z "$LATEST_REPORT" ]; then
          echo "::error::No report file found!"
          exit 1
        fi
        echo "Found latest report: $LATEST_REPORT"

        # 3. Create the history folder and copy the report
        mkdir -p reports/report_history
        cp "$LATEST_REPORT" reports/report_history/
        
        # 4. Copy the latest report to index.html for the main page
        cp "$LATEST_REPORT" reports/index.html
        
    - name: Upload Report Artifact
      # Upload the entire 'reports' directory (containing index.html and report_history/)
      uses: actions/upload-pages-artifact@v3
      with:
        path: 'reports/' 
        
    # ---------------------------------------------
    # Docker Image Build/Push for GHCR (Simplified)
    # ---------------------------------------------
    # NOTE: The temporary Dockerfile creation step has been removed. 
    # If you want the Docker image to be built, ensure a simple Dockerfile 
    # (like the one below) exists in your repo root.
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
        
    - name: Log in to GitHub Container Registry (GHCR)
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        # Assuming your Dockerfile now uses a simple python:3.10-slim base
        file: ./Dockerfile 
        tags: |
          ghcr.io/${{ github.repository }}:latest
          ghcr.io/${{ github.repository }}:${{ github.sha }}

  deploy:
    needs: build_and_test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4