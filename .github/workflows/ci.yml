name: Firmware Monitor CI

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build_ubuntu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.10' }
      - name: Generate report (ubuntu)
        shell: bash
        run: |
          set -euo pipefail
          python firmware_monitor.py ${{ github.run_number }}
          LATEST="$(ls -t reports/*.html | head -n 1)"
          mv "$LATEST" "reports/$(basename "$LATEST" .html)_ubuntu-latest.html"
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: report-ubuntu
          path: reports/

  build_windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.10' }
      - name: Generate report (windows)
        shell: bash
        run: |
          set -euo pipefail
          python firmware_monitor.py ${{ github.run_number }}
          LATEST="$(ls -t reports/*.html | head -n 1)"
          mv "$LATEST" "reports/$(basename "$LATEST" .html)_windows-latest.html"
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: report-windows
          path: reports/

  publish_site:
    needs: [ build_ubuntu, build_windows ]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}
    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Download Ubuntu artifact
        uses: actions/download-artifact@v4
        with: { name: report-ubuntu, path: _new/ }

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with: { name: report-windows, path: _new/ }

      - name: Prepare/clone archive branch (report_history)
        env: { GH_TOKEN: ${{ secrets.GITHUB_TOKEN }} }
        shell: bash
        run: |
          set -euo pipefail
          rm -rf _hist
          if git ls-remote --exit-code --heads "https://github.com/${GITHUB_REPOSITORY}.git" report_history >/dev/null 2>&1; then
            git clone --depth 1 --branch report_history "https://x-access-token:${GH_TOKEN}@github.com/${GITHUB_REPOSITORY}.git" _hist
          else
            git clone --depth 1 "https://x-access-token:${GH_TOKEN}@github.com/${GITHUB_REPOSITORY}.git" _hist
            cd _hist
            git switch --orphan report_history
            rm -rf ./*
            echo "<!doctype html><title>Report History</title>" > index.html
            git add -A
            git -c user.name='github-actions[bot]' -c user.email='github-actions[bot]@users.noreply.github.com' commit -m "init report_history"
            git push -u origin report_history
            cd ..
          fi

      - name: Build site (merge archive + new reports)
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p _site/report_history
          # carry forward previous archive
          rsync -a --exclude='.git' --exclude='.github' _hist/ _site/report_history/ || true
          # add this run's reports
          shopt -s nullglob
          cp -f _new/*_ubuntu-latest.html  _site/report_history/ 2>/dev/null || true
          cp -f _new/*_windows-latest.html _site/report_history/ 2>/dev/null || true
          # site root: latest ubuntu preferred
          UBU="$(ls -t _new/*_ubuntu-latest.html 2>/dev/null | head -n 1 || true)"
          if [ -n "$UBU" ]; then cp "$UBU" _site/index.html
          else ANY="$(ls -t _new/*.html 2>/dev/null | head -n 1 || true)"; [ -n "$ANY" ] && cp "$ANY" _site/index.html || { echo "::error::No HTML report for index"; exit 1; }; fi

      - name: Generate history index (safe HTML + Back link)
        shell: bash
        run: |
          set -euo pipefail
          HIST="_site/report_history"
          mapfile -t FILES < <(find "$HIST" -maxdepth 1 -type f -name 'firmware_analysis_report_*.html' | sort -r)
          LINKS=""
          for f in "${FILES[@]}"; do
            b="$(basename "$f")"
            lab="$(echo "$b" | sed -E 's/^firmware_analysis_report_([0-9]{8})_([0-9]{6})(_[0-9]+)?_(.*)\.html$/Date: \1 Time: \2 Build: \3 OS: \4/' | sed 's/_//g' | sed 's/Build:  /Build: NA /')"
            LINKS="${LINKS}<li><a href=\"${b}\">${lab}</a></li>"
          done
          cat > "${HIST}/index.html" <<'HTML'
<!doctype html>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width,initial-scale=1">
<title>Report History</title>
<style>body{font-family:system-ui,-apple-system,Segoe UI,Roboto,sans-serif;margin:2rem;color:#111827}a{color:#1d4ed8;text-decoration:none}a:hover{text-decoration:underline}.back{margin-bottom:1rem;display:inline-block}h1{margin:.2rem 0 1rem}ul{padding-left:1.2rem}li{margin:.35rem 0}.note{margin-top:1.5rem;color:#6b7280;font-size:.9rem}</style>
/firmware_monitor/‚Üê Back to Latest Report</a>
<h1>Archived Report History</h1>
<ul>
HTML
          printf '%s\n' "${LINKS}" >> "${HIST}/index.html"
          echo '</ul><div class="note">All reports are archived here: /firmware_monitor/report_history/</div>' >> "${HIST}/index.html"
          echo '</body></html>' >> "${HIST}/index.html"
          touch _site/.nojekyll

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v4
        with: { path: _site/ }

      - name: Commit archive back to report_history
        env: { GH_TOKEN: ${{ secrets.GITHUB_TOKEN }} }
        shell: bash
        run: |
          set -euo pipefail
          rsync -a --delete --exclude='.git' _site/report_history/ _hist/
          cd _hist
          git add -A
          if ! git diff --cached --quiet; then
            git -c user.name='github-actions[bot]' -c user.email='github-actions[bot]@users.noreply.github.com' commit -m "Add reports from run ${GITHUB_RUN_NUMBER}"
            git push -u origin HEAD:report_history
          else
            echo "No archive changes."
          fi

      - name: Deploy to GitHub Pages
        id: deploy
        uses: actions/deploy-pages@v4