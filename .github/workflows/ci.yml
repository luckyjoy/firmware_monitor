name: Firmware Monitoring CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# Grant GITHUB_TOKEN permissions for contents and pages deployment
permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Run Analysis Script & Generate Reports
      # Executes firmware_monitor.py, which creates the timestamped reports in ./reports/
      run: python firmware_monitor.py

    - name: Find Latest Report HTML Path
      id: get_report_path
      # Gets the exact filename since the script uses a dynamic timestamp
      run: |
        # Use a wildcard search and take the first match
        REPORT_FILE=$(ls reports/firmware_monitor_*.html | head -n 1)
        echo "report_path=$REPORT_FILE" >> $GITHUB_OUTPUT

    - name: Upload Report Artifact for GitHub Pages
      # Uploads the entire reports folder, which contains the HTML file for deployment
      uses: actions/upload-pages-artifact@v3
      with:
        path: reports/
        
    # Docker build steps are omitted here as per conversation, but could be re-added
    # if the Dockerfile is corrected to not rely on requirements.txt.

  # Deployment job runs only after build_and_test is complete and only on the main branch push
  deploy:
    needs: build_and_test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
