# Retrieve EXISTING history (branch root -> history_temp/)
      - name: Retrieve Existing Report History (if branch exists)
        id: fetch_history
        uses: actions/checkout@v4
        continue-on-error: true
        with:
          repository: ${{ github.repository }}
          ref: report_history
          path: history_temp
          fetch-depth: 1

      - name: Prepare Reports for Deployment (merge history + build indexes)
        shell: bash
        run: |
          set -euo pipefail

          mkdir -p reports/report_history

          # --- Merge existing history from the dedicated branch (ROOT) ---
          if [ -d history_temp ]; then
            shopt -s nullglob dotglob
            cp -r history_temp/* reports/report_history/ || true
          fi

          # --- Add NEW reports from this run ---
          shopt -s nullglob
          for f in reports/*_ubuntu-latest.html;  do cp "$f" reports/report_history/; done
          for f in reports/*_windows-latest.html; do cp "$f" reports/report_history/; done

          # --- Choose one (Ubuntu) as the latest index ---
          LATEST_UBUNTU_REPORT="$(ls -t reports/*_ubuntu-latest.html | head -n 1)"
          cp "${LATEST_UBUNTU_REPORT}" reports/index.html

          # --- Build History Index page using HTML template ---
          # Create links from all archived HTML files
          mapfile -t REPORT_FILES < <(find reports/report_history -maxdepth 1 -type f -name 'firmware_analysis_report_*.html' | sort -r)

          HISTORY_LINKS=""
          for file_path in "${REPORT_FILES[@]}"; do
            filename="$(basename "$file_path")"
            # Expected pattern: firmware_analysis_report_YYYYMMDD_HHMMSS[_BUILD]_<os>.html
            # Render a friendly label
            link_name="$(echo "$filename" \
              | sed -E 's/^firmware_analysis_report_([0-9]{8})_([0-9]{6})(_[0-9]+)?_(.*)\.html$/Date: \1 Time: \2 Build: \3 OS: \4/' \
              | sed 's/_//g' \
              | sed 's/Build:  /Build: NA /')"
            HISTORY_LINKS+="<li><a href=\"$filename\">$link_name</a></li>"
          done

          # Ensure Pages doesnâ€™t attempt Jekyll processing (safe either way)
          touch reports/.nojekyll

          # Fill template placeholder
          sed "s|{{HISTORY_LINKS}}|$HISTORY_LINKS|g" history_template.html > reports/report_history/index.html

      - name: Push Combined History Back to Repository
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          directory: reports/report_history
          branch: report_history
          force: true  # You can change to false once stabilized